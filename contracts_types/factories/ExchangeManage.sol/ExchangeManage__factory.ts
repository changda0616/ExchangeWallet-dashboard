/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExchangeManage,
  ExchangeManageInterface,
} from "../../ExchangeManage.sol/ExchangeManage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "ExchangeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ExchangeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "SupportedAssetAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "SupportedAssetRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "addExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "addSupportedAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exchanges",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getExchangeDetails",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "walletAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "isAssetSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "isExchangeExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "removeExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "removeSupportedAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d61002a565b61002561002a565b6100e9565b600054610100900460ff16156100965760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100e7576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516117f5610120600039600081816105b8015281816105f801528181610697015281816106d7015261076a01526117f56000f3fe6080604052600436106100e85760003560e01c8063715018a61161008a5780638e0be369116100595780638e0be36914610278578063bad6d25114610298578063f2fde38b146102b8578063fac09e87146102d857600080fd5b8063715018a6146101f85780637412dbb31461020d5780638129fc1c1461023b5780638da5cb5b1461025057600080fd5b80633659cfe6116100c65780633659cfe6146101645780634f1ef2861461018457806352d1902d1461019757806358f09007146101ba57600080fd5b80631c46bc6f146100ed5780632c63bea41461010f5780632db6794c1461012f575b600080fd5b3480156100f957600080fd5b5061010d6101083660046111ce565b6102f8565b005b34801561011b57600080fd5b5061010d61012a366004611288565b610395565b34801561013b57600080fd5b5061014f61014a366004611382565b610503565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061010d61017f3660046111ce565b6105ae565b61010d6101923660046113b5565b61068d565b3480156101a357600080fd5b506101ac61075d565b60405190815260200161015b565b3480156101c657600080fd5b5061014f6101d53660046111ce565b6001600160a01b03908116600090815260c9602052604090206001015416151590565b34801561020457600080fd5b5061010d610810565b34801561021957600080fd5b5061022d6102283660046111ce565b610824565b60405161015b929190611467565b34801561024757600080fd5b5061010d6108d1565b34801561025c57600080fd5b506033546040516001600160a01b03909116815260200161015b565b34801561028457600080fd5b5061010d6102933660046111ce565b6109e2565b3480156102a457600080fd5b5061022d6102b33660046111ce565b610aba565b3480156102c457600080fd5b5061010d6102d33660046111ce565b610bdd565b3480156102e457600080fd5b5061010d6102f33660046111ce565b610c53565b33600090815260c960205260409020600101546001600160a01b03166103395760405162461bcd60e51b815260040161033090611491565b60405180910390fd5b33600081815260c9602090815260408083206001600160a01b0386168085526002909101909252808320805460ff19169055519092917f63379255d16c234833f869b2941c72f957c7de09d88f45193ff1a6b39ffbb93391a350565b61039d610cea565b6001600160a01b03828116600090815260c9602052604090206001015416156104085760405162461bcd60e51b815260206004820152601760248201527f45786368616e676520616c7265616479206578697374730000000000000000006044820152606401610330565b6001600160a01b038216600090815260c9602052604090208061042b858261155c565b506001810180546001600160a01b0319166001600160a01b03851617905560005b82518110156104b357600182600201600085848151811061046f5761046f61161c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806104ab81611632565b91505061044c565b50816040516104c29190611659565b604051908190038120906001600160a01b038516907fb9ce8bf6750fb6099297cca515b806d29a3861b94e14e3de6c852c3b3a1e66ec90600090a350505050565b6001600160a01b03828116600090815260c9602052604081206001015490911661057b5760405162461bcd60e51b815260206004820152602360248201527f57616c6c6574206973206e6f7420696e207468652065786368616e67652065786044820152621a5cdd60ea1b6064820152608401610330565b506001600160a01b03918216600090815260c9602090815260408083209390941682526002909201909152205460ff1690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105f65760405162461bcd60e51b815260040161033090611698565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661063f600080516020611779833981519152546001600160a01b031690565b6001600160a01b0316146106655760405162461bcd60e51b8152600401610330906116e4565b61066e81610d44565b6040805160008082526020820190925261068a91839190610d4c565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106d55760405162461bcd60e51b815260040161033090611698565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661071e600080516020611779833981519152546001600160a01b031690565b6001600160a01b0316146107445760405162461bcd60e51b8152600401610330906116e4565b61074d82610d44565b61075982826001610d4c565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107fd5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610330565b5060008051602061177983398151915290565b610818610cea565b6108226000610ebc565b565b60c96020526000908152604090208054819061083f906114d4565b80601f016020809104026020016040519081016040528092919081815260200182805461086b906114d4565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b505050600190930154919250506001600160a01b031682565b600054610100900460ff16158080156108f15750600054600160ff909116105b8061090b5750303b15801561090b575060005460ff166001145b61096e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610330565b6000805460ff191660011790558015610991576000805461ff0019166101001790555b61099a33610ebc565b801561068a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6109ea610cea565b6001600160a01b03818116600090815260c9602052604090206001015416610a4e5760405162461bcd60e51b8152602060048201526017602482015276115e18da185b99d948191bd95cc81b9bdd08195e1a5cdd604a1b6044820152606401610330565b6001600160a01b038116600090815260c96020526040812090610a718282611164565b5060010180546001600160a01b03191690556040516001600160a01b038216907ff50d0d312d501878616eb5e78ebf3ed6dcd3955aaef8165af9c6b057cc4832fb90600090a250565b6001600160a01b03818116600090815260c9602052604081206001015460609216610b215760405162461bcd60e51b8152602060048201526017602482015276115e18da185b99d948191bd95cc81b9bdd08195e1a5cdd604a1b6044820152606401610330565b6001600160a01b03808416600090815260c96020526040902060018101548154919283929116908290610b53906114d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7f906114d4565b8015610bcc5780601f10610ba157610100808354040283529160200191610bcc565b820191906000526020600020905b815481529060010190602001808311610baf57829003601f168201915b505050505091509250925050915091565b610be5610cea565b6001600160a01b038116610c4a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610330565b61068a81610ebc565b33600090815260c960205260409020600101546001600160a01b0316610c8b5760405162461bcd60e51b815260040161033090611491565b33600081815260c9602090815260408083206001600160a01b0386168085526002909101909252808320805460ff19166001179055519092917f1b965553972c3711807da008bcb067c0c3504f6ed2ab8690233f8ce1bdf5a14491a350565b6033546001600160a01b031633146108225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610330565b61068a610cea565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610d8457610d7f83610f0e565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610dde575060408051601f3d908101601f19168201909252610ddb91810190611730565b60015b610e415760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610330565b6000805160206117798339815191528114610eb05760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610330565b50610d7f838383610faa565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b610f7b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610330565b60008051602061177983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610fb383610fd5565b600082511180610fc05750805b15610d7f57610fcf8383611015565b50505050565b610fde81610f0e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061103a838360405180606001604052806027815260200161179960279139611041565b9392505050565b6060600080856001600160a01b03168560405161105e9190611749565b600060405180830381855af49150503d8060008114611099576040519150601f19603f3d011682016040523d82523d6000602084013e61109e565b606091505b50915091506110af868383876110b9565b9695505050505050565b60608315611128578251600003611121576001600160a01b0385163b6111215760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610330565b5081611132565b611132838361113a565b949350505050565b81511561114a5781518083602001fd5b8060405162461bcd60e51b81526004016103309190611765565b508054611170906114d4565b6000825580601f10611180575050565b601f01602090049060005260206000209081019061068a91905b808211156111ae576000815560010161119a565b5090565b80356001600160a01b03811681146111c957600080fd5b919050565b6000602082840312156111e057600080fd5b61103a826111b2565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611228576112286111e9565b604052919050565b600067ffffffffffffffff83111561124a5761124a6111e9565b61125d601f8401601f19166020016111ff565b905082815283838301111561127157600080fd5b828260208301376000602084830101529392505050565b60008060006060848603121561129d57600080fd5b833567ffffffffffffffff808211156112b557600080fd5b818601915086601f8301126112c957600080fd5b60206112d9888435838601611230565b95506112e68188016111b2565b945060408701359250818311156112fc57600080fd5b828701925087601f84011261131057600080fd5b823582811115611322576113226111e9565b8060051b92506113338284016111ff565b818152928401820192828101908a85111561134d57600080fd5b948301945b8486101561137257611363866111b2565b82529483019490830190611352565b8096505050505050509250925092565b6000806040838503121561139557600080fd5b61139e836111b2565b91506113ac602084016111b2565b90509250929050565b600080604083850312156113c857600080fd5b6113d1836111b2565b9150602083013567ffffffffffffffff8111156113ed57600080fd5b8301601f810185136113fe57600080fd5b61140d85823560208401611230565b9150509250929050565b60005b8381101561143257818101518382015260200161141a565b50506000910152565b60008151808452611453816020860160208601611417565b601f01601f19169290920160200192915050565b60408152600061147a604083018561143b565b905060018060a01b03831660208301529392505050565b60208082526023908201527f53656e646572206973206e6f7420696e207468652065786368616e67652065786040820152621a5cdd60ea1b606082015260800190565b600181811c908216806114e857607f821691505b60208210810361150857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610d7f57600081815260208120601f850160051c810160208610156115355750805b601f850160051c820191505b8181101561155457828155600101611541565b505050505050565b815167ffffffffffffffff811115611576576115766111e9565b61158a8161158484546114d4565b8461150e565b602080601f8311600181146115bf57600084156115a75750858301515b600019600386901b1c1916600185901b178555611554565b600085815260208120601f198616915b828110156115ee578886015182559484019460019091019084016115cf565b508582101561160c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161165257634e487b7160e01b600052601160045260246000fd5b5060010190565b815160009082906020808601845b8381101561168c5781516001600160a01b031685529382019390820190600101611667565b50929695505050505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561174257600080fd5b5051919050565b6000825161175b818460208701611417565b9190910192915050565b60208152600061103a602083018461143b56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200d79a6984233456f9a0fd00758e02aa2d644a845e2879b877bd935a3e826c87364736f6c63430008130033";

type ExchangeManageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeManageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExchangeManage__factory extends ContractFactory {
  constructor(...args: ExchangeManageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ExchangeManage> {
    return super.deploy(overrides || {}) as Promise<ExchangeManage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExchangeManage {
    return super.attach(address) as ExchangeManage;
  }
  override connect(signer: Signer): ExchangeManage__factory {
    return super.connect(signer) as ExchangeManage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeManageInterface {
    return new utils.Interface(_abi) as ExchangeManageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeManage {
    return new Contract(address, _abi, signerOrProvider) as ExchangeManage;
  }
}
