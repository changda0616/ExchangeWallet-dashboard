/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MakeOrder,
  MakeOrderInterface,
} from "../../MakeOrder.sol/MakeOrder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "OrderExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "OrderPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE_DECIMASL",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeManage",
    outputs: [
      {
        internalType: "contract ExchangeManage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "executeOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchangeManage",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liabilities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "enum OrderType",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum OrderType",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "contract IERC20",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "placeOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052600060c9553480156200001a57600080fd5b506200002562000035565b6200002f62000035565b620000f6565b600054610100900460ff1615620000a25760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000f4576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516120be6200012e60003960008181610371015281816103ba0152818161045901528181610499015261088e01526120be6000f3fe6080604052600436106100f35760003560e01c8063775fec621161008a578063a85c38ef11610059578063a85c38ef14610273578063c4d66de8146102ef578063de979da01461030f578063f2fde38b1461034757600080fd5b8063775fec62146102005780638129fc1c146102205780638da5cb5b1461023557806394f611341461025357600080fd5b80634f1ef286116100c65780634f1ef286146101a3578063514fcac7146101b657806352d1902d146101d6578063715018a6146101eb57600080fd5b8063068150b8146100f85780632453ffa8146101355780632f391c6a146101595780633659cfe614610181575b600080fd5b34801561010457600080fd5b5060ca54610118906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014157600080fd5b5061014b60c95481565b60405190815260200161012c565b34801561016557600080fd5b5061016e601281565b60405161ffff909116815260200161012c565b34801561018d57600080fd5b506101a161019c366004611ac3565b610367565b005b6101a16101b1366004611afd565b61044f565b3480156101c257600080fd5b5061014b6101d1366004611bc1565b61051f565b3480156101e257600080fd5b5061014b610881565b3480156101f757600080fd5b506101a1610934565b34801561020c57600080fd5b5061014b61021b366004611bda565b610948565b34801561022c57600080fd5b506101a161105c565b34801561024157600080fd5b506033546001600160a01b0316610118565b34801561025f57600080fd5b5061014b61026e366004611bc1565b61116d565b34801561027f57600080fd5b506102dc61028e366004611bc1565b60cb6020526000908152604090208054600182015460028301546003840154600485015460059095015460ff808616966101009096046001600160a01b039081169695811695941693911687565b60405161012c9796959493929190611c4f565b3480156102fb57600080fd5b506101a161030a366004611ac3565b611591565b34801561031b57600080fd5b5061014b61032a366004611cae565b60cc60209081526000928352604080842090915290825290205481565b34801561035357600080fd5b506101a1610362366004611ac3565b6115bc565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103b85760405162461bcd60e51b81526004016103af90611ce7565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610401600080516020612042833981519152546001600160a01b031690565b6001600160a01b0316146104275760405162461bcd60e51b81526004016103af90611d33565b61043081611632565b6040805160008082526020820190925261044c9183919061163a565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104975760405162461bcd60e51b81526004016103af90611ce7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104e0600080516020612042833981519152546001600160a01b031690565b6001600160a01b0316146105065760405162461bcd60e51b81526004016103af90611d33565b61050f82611632565b61051b8282600161163a565b5050565b600081815260cb60205260408120600581015460ff161561057b5760405162461bcd60e51b815260206004820152601660248201527513dc99195c88185b1c9958591e48195e1958dd5d195960521b60448201526064016103af565b805461010090046001600160a01b03163314806105a257506033546001600160a01b031633145b61060d5760405162461bcd60e51b815260206004820152603660248201527f4f726465722063616e206f6e6c792062652063616e63656c6c656420627920746044820152753432903a3930b232b91037b9103a34329037bbb732b960511b60648201526084016103af565b60058101805460ff1916600190811790915581549082015460028301546003840154600485015460ff8516946001600160a01b03610100909104811694811693169190600086600181111561066457610664611c39565b036107615760006106776012600a611e79565b6106819083611e89565b61068b9084611eab565b6001600160a01b03808616600090815260cc60209081526040808320938b168352929052908120805492935083929091906106c7908490611ec2565b909155505060405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905285169063a9059cbb906044016020604051808303816000875af115801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f9190611ed5565b61075b5760405162461bcd60e51b81526004016103af90611ef7565b5061082c565b6001600160a01b03808516600090815260cc6020908152604080832093891683529290529081208054849290610798908490611ec2565b909155505060405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af11580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190611ed5565b61082c5760405162461bcd60e51b81526004016103af90611f2e565b85600181111561083e5761083e611c39565b6040516001600160a01b038716908b907f90593d43bed4f9a4206b8ce85751d9d87271fb5cada4d80d867d61400b26b1fe90600090a45096979650505050505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109215760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103af565b5060008051602061204283398151915290565b61093c6117aa565b6109466000611804565b565b6000836001600160a01b0316856001600160a01b0316036109c15760405162461bcd60e51b815260206004820152602d60248201527f4261736520746f6b656e20616e642071756f746520746f6b656e2063616e6e6f60448201526c74206265207468652073616d6560981b60648201526084016103af565b60ca546001600160a01b0316632db6794c6109e46033546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529088166024820152604401602060405180830381865afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a549190611ed5565b610aa05760405162461bcd60e51b815260206004820152601a60248201527f42617365546f6b656e206973206e6f7420737570706f7274656400000000000060448201526064016103af565b60ca546001600160a01b0316632db6794c610ac36033546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529087166024820152604401602060405180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b339190611ed5565b610b7f5760405162461bcd60e51b815260206004820152601b60248201527f51756f7465546f6b656e206973206e6f7420737570706f72746564000000000060448201526064016103af565b60c98054906000610b8f83611f65565b91905055506040518060e00160405280876001811115610bb157610bb1611c39565b8152336020808301919091526001600160a01b0388811660408085019190915290881660608401526080830187905260a08301869052600060c090930183905260c954835260cb909152902081518154829060ff191660018381811115610c1a57610c1a611c39565b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b031992831617905560608401516002840180549190931691161790556080820151600382015560a0820151600482015560c0909101516005909101805491151560ff199092169190911790556000866001811115610cba57610cba611c39565b03610e7d576000610ccd6012600a611e79565b610cd79084611e89565b610ce19085611eab565b6001600160a01b038616600090815260cc60209081526040808320338452909152812080549293508392909190610d19908490611f7e565b9091555050604051636eb1769f60e11b815233600482015230602482015281906001600160a01b0387169063dd62ed3e90604401602060405180830381865afa158015610d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8e9190611f91565b1015610de85760405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f75676820616c6c6f77616e636520666f722071756f7465207460448201526337b5b2b760e11b60648201526084016103af565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd90610e1890339030908690600401611faa565b6020604051808303816000875af1158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b9190611ed5565b610e775760405162461bcd60e51b81526004016103af90611ef7565b5061100e565b6001600160a01b038516600090815260cc6020908152604080832033845290915281208054859290610eb0908490611f7e565b9091555050604051636eb1769f60e11b815233600482015230602482015283906001600160a01b0387169063dd62ed3e90604401602060405180830381865afa158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f259190611f91565b1015610f7f5760405162461bcd60e51b815260206004820152602360248201527f4e6f7420656e6f75676820616c6c6f77616e636520666f72206261736520746f60448201526235b2b760e91b60648201526084016103af565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd90610faf90339030908890600401611faa565b6020604051808303816000875af1158015610fce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff29190611ed5565b61100e5760405162461bcd60e51b81526004016103af90611f2e565b85600181111561102057611020611c39565b60c9546040513391907f3e4c0f2a9bff996ba9c9e67c062e6de3aae15ec8e0353cb18e90d19916937b4b90600090a4505060c954949350505050565b600054610100900460ff161580801561107c5750600054600160ff909116105b806110965750303b158015611096575060005460ff166001145b6110f95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103af565b6000805460ff19166001179055801561111c576000805461ff0019166101001790555b61112533611804565b801561044c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60006111776117aa565b600082815260cb60205260409020600581015460ff16156111d35760405162461bcd60e51b815260206004820152601660248201527513dc99195c88185b1c9958591e48195e1958dd5d195960521b60448201526064016103af565b60058101805460ff1916600190811790915581549082015460028301546003840154600485015460ff8516946001600160a01b03610100909104811694811693169190600086600181111561122a5761122a611c39565b036113b457600061123d6012600a611e79565b6112479083611e89565b6112519084611eab565b6001600160a01b03808616600090815260cc60209081526040808320938b1683529290529081208054929350839290919061128d908490611ec2565b90915550506040516323b872dd60e01b81526001600160a01b038616906323b872dd906112c29033908a908890600401611faa565b6020604051808303816000875af11580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113059190611ed5565b6113215760405162461bcd60e51b81526004016103af90611f2e565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0385169063a9059cbb906044016020604051808303816000875af115801561136e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113929190611ed5565b6113ae5760405162461bcd60e51b81526004016103af90611ef7565b50611535565b60006113c26012600a611e79565b6113cc9083611e89565b6113d69084611eab565b6001600160a01b03808716600090815260cc60209081526040808320938b16835292905290812080549293508592909190611412908490611ec2565b90915550506040516323b872dd60e01b81526001600160a01b038516906323b872dd906114479033908a908690600401611faa565b6020604051808303816000875af1158015611466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148a9190611ed5565b6114a65760405162461bcd60e51b81526004016103af90611ef7565b60405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0386169063a9059cbb906044016020604051808303816000875af11580156114f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115179190611ed5565b6115335760405162461bcd60e51b81526004016103af90611f2e565b505b85600181111561154757611547611c39565b87546040516101009091046001600160a01b0316908b907fbed24b31e8393a58be857344e1d4c93ea09fbb317d21d07efc86adfac568868490600090a45096979650505050505050565b61159a33611804565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b6115c46117aa565b6001600160a01b0381166116295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103af565b61044c81611804565b61044c6117aa565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156116725761166d83611856565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116cc575060408051601f3d908101601f191682019092526116c991810190611f91565b60015b61172f5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103af565b600080516020612042833981519152811461179e5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103af565b5061166d8383836118f2565b6033546001600160a01b031633146109465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103af565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b6118c35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103af565b60008051602061204283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6118fb8361191d565b6000825111806119085750805b1561166d57611917838361195d565b50505050565b61192681611856565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061198283836040518060600160405280602781526020016120626027913961198b565b90505b92915050565b6060600080856001600160a01b0316856040516119a89190611ff2565b600060405180830381855af49150503d80600081146119e3576040519150601f19603f3d011682016040523d82523d6000602084013e6119e8565b606091505b50915091506119f986838387611a03565b9695505050505050565b60608315611a72578251600003611a6b576001600160a01b0385163b611a6b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103af565b5081611a7c565b611a7c8383611a84565b949350505050565b815115611a945781518083602001fd5b8060405162461bcd60e51b81526004016103af919061200e565b6001600160a01b038116811461044c57600080fd5b600060208284031215611ad557600080fd5b8135611ae081611aae565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611b1057600080fd5b8235611b1b81611aae565b9150602083013567ffffffffffffffff80821115611b3857600080fd5b818501915085601f830112611b4c57600080fd5b813581811115611b5e57611b5e611ae7565b604051601f8201601f19908116603f01168101908382118183101715611b8657611b86611ae7565b81604052828152886020848701011115611b9f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208284031215611bd357600080fd5b5035919050565b600080600080600060a08688031215611bf257600080fd5b853560028110611c0157600080fd5b94506020860135611c1181611aae565b93506040860135611c2181611aae565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b60e0810160028910611c7157634e487b7160e01b600052602160045260246000fd5b9781526001600160a01b0396871660208201529486166040860152929094166060840152608083015260a082019290925290151560c09091015290565b60008060408385031215611cc157600080fd5b8235611ccc81611aae565b91506020830135611cdc81611aae565b809150509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611dd0578160001904821115611db657611db6611d7f565b80851615611dc357918102915b93841c9390800290611d9a565b509250929050565b600082611de757506001611985565b81611df457506000611985565b8160018114611e0a5760028114611e1457611e30565b6001915050611985565b60ff841115611e2557611e25611d7f565b50506001821b611985565b5060208310610133831016604e8410600b8410161715611e53575081810a611985565b611e5d8383611d95565b8060001904821115611e7157611e71611d7f565b029392505050565b600061198261ffff841683611dd8565b600082611ea657634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761198557611985611d7f565b8181038181111561198557611985611d7f565b600060208284031215611ee757600080fd5b81518015158114611ae057600080fd5b6020808252601e908201527f5472616e73666572206f662071756f746520746f6b656e206661696c65640000604082015260600190565b6020808252601d908201527f5472616e73666572206f66206261736520746f6b656e206661696c6564000000604082015260600190565b600060018201611f7757611f77611d7f565b5060010190565b8082018082111561198557611985611d7f565b600060208284031215611fa357600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60005b83811015611fe9578181015183820152602001611fd1565b50506000910152565b60008251612004818460208701611fce565b9190910192915050565b602081526000825180602084015261202d816040850160208701611fce565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f3bdb30b1285adbe76fb36d8e626fdb8a364b9d0915b86134870fbb2c72ab9b264736f6c63430008130033";

type MakeOrderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MakeOrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MakeOrder__factory extends ContractFactory {
  constructor(...args: MakeOrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MakeOrder> {
    return super.deploy(overrides || {}) as Promise<MakeOrder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MakeOrder {
    return super.attach(address) as MakeOrder;
  }
  override connect(signer: Signer): MakeOrder__factory {
    return super.connect(signer) as MakeOrder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MakeOrderInterface {
    return new utils.Interface(_abi) as MakeOrderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MakeOrder {
    return new Contract(address, _abi, signerOrProvider) as MakeOrder;
  }
}
